generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String    @id
  username     String    @unique
  displayName  String
  email        String?   @unique
  passwordHash String?
  googleId     String?   @unique
  avatarUrl    String?
  bio          String?
  createdAt    DateTime  @default(now())
  sessions     Session[]

  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Customer {
  id          String    @id @default(cuid())
  name        String
  email       String
  address     String
  createdAt   DateTime  @default(now())
  userId      String
  ssn         String
  birthday    DateTime
  phoneNumber String
  identification String
  accounts    Account[]

  @@map("customers")
}

model Account {
  id            String   @id @default(cuid())
  accountNumber String
  customerId    String
  createdAt     DateTime @default(now())
  accountType   String
  customer      Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  cards         Card[]

  @@map("accounts")
}

model Card {
  id         String   @id @default(cuid())
  debitCard  Boolean
  creditCard Boolean
  cardNumber Int
  expDate    DateTime
  accountId  String
  createdAt  DateTime @default(now())
  account    Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@map("cards")
}
