generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String    @id
  username     String    @unique
  displayName  String
  email        String?   @unique
  passwordHash String?
  googleId     String?   @unique
  avatarUrl    String?
  bio          String?
  createdAt    DateTime  @default(now())
  sessions     Session[]

  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Customer {
  id             String           @id @default(cuid())
  name           String
  email          String
  address        String
  createdAt      DateTime         @default(now())
  userId         String
  ssn            String
  birthday       DateTime
  phoneNumber    String
  accounts       Account[]
  identification Identification[]
  Card          Card[]

  @@map("customers")
}

model Account {
  id            String   @id @default(cuid())
  accountNumber String
  customerId    String
  createdAt     DateTime @default(now())
  accountType   String
  interestRate  String
  balance       String
  customer      Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  cards         Card[]

  @@map("accounts")
}

model Identification {
  id                   String   @id @default(cuid())
  customerId           String
  identificationNumber String
  identificationType   String
  issuingCountry       String
  issuingState         String
  issueDate            String
  expirationDate       String
  customer             Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@map("identifications")
}

model Card {
  id         String   @id @default(cuid())
  cardType   String
  cardNumber String
  ccv        String
  expDate    String
  accountId  String
  customerId String
  createdAt  DateTime @default(now())
  account    Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@map("cards")
}
